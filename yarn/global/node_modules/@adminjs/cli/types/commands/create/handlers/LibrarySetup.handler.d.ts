import { AdminJSAdapter, AdminJSPlugin, CreateCommandInput } from '../types.js';
import { BaseCommandHandler } from '../utils/BaseCommandHandler.js';
import { DriverInfo } from './DatabaseDriverSetup.handler.js';
export declare enum LibraryType {
    Plugin = "plugin",
    Adapter = "adapter"
}
export interface LibrarySetupHandlerConfiguration {
    libraryName: AdminJSAdapter | AdminJSPlugin;
    type: LibraryType;
}
export declare class LibrarySetupHandler extends BaseCommandHandler<CreateCommandInput> {
    protected libraryType: LibraryType;
    protected libraryName: AdminJSAdapter | AdminJSPlugin;
    constructor(options: CreateCommandInput, libraryType: LibraryType);
    run(): Promise<void>;
    postSetup(driversInfo: DriverInfo | null): Promise<void>;
    protected getJsonConfigFile(file: string): Promise<any>;
    protected modifyPackageContents(): Promise<void>;
    protected copyTemplateContents(): Promise<void>;
}
